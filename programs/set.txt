if (isdigit(ch) || (numericFlag == 1 && ch == '.')) {
            numericFlag = 1;
        } else {
            numericFlag = 0;
        }
        if (isSingleLineComment(word)) {
            singleFlag = 1;
        }
        if (ch == '\n' && singleFlag == 1) {
            printf("%s Single-Line-Comment\n", word);
            word[0] = '\0';
            singleFlag = 0;
        }
        if (ch == '\"') {
            stringFlag = stringFlag == 0 ? 1 : 0;
        }
        if ((ch == ' ' || isPunctuator(ch) || isOperatorDelim(ch)) && (numericFlag != 1 && stringFlag != 1 && singleFlag != 1)) {
            if (word[0] != '\0' && operatorFlag != 1) {
                if (isKeyword(word)) {
                    printf("%s Keyword\n", word);
                    word[0] = '\0';
                } else if (isDouble(word)) {
                    printf("%s  Real-Literal\n", word);
                    word[0] = '\0';
                } else if (isNumber(word)) {
                    printf("%s  Integer-Literal\n", word);
                    word[0] = '\0';
                } else if (isIdentifier(word)) {
                    printf("%s  Identifier\n", word);
                    word[0] = '\0';
                } else if (isString(word)) {
                    printf("%s  String-Literal\n", word);
                    word[0] = '\0';
                } else {
                    printf("%s Error\n", word);
                    word[0] = '\0';
                }
            }
            if (isOperatorDelim(ch)) {
                operatorFlag = 1;
                if (ch == '\n') {
                    printf("x");
                }
                append(word, ch);
            }
            if (isPunctuator(ch)) {
                // printf("%c  Operator or Punctuator\n", ch);
            }
        } else if (ch != '\n') {
            if (operatorFlag) {
                if (isOperator(word)) {
                    // printf("%s Operator or Punctuator\n", word);
                    word[0] = '\0';
                }
                operatorFlag = 0;
            }
            append(word, ch);
        }